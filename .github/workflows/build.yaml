name: Build wiliwili

on:
  push:
    branches:
      - skipAD-RE
  workflow_dispatch:
    inputs:
      ssh_darwin:
        description: 'SSH connection to Darwin'
        required: false
        default: 'false'
      ssh_ubuntu:
        description: 'SSH connection to Ubuntu'
        required: false
        default: 'false'
      arm_flatpak:
        description: 'build flatpak (aarch64)'
        required: false
        default: 'false'
      universal_macos:
        description: 'build macos (universal)'
        required: false
        default: 'false'
      release:
        description: 'Push a new release'
        required: false
        default: 'false'
      version:
        description: 'Version'
        required: false
        default: '0.0.0'
      disable_unity_build:
        description: 'Disable unity build'
        required: false
        default: 'false'
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.info.outputs.version }}
      DIST_NRO: ${{ steps.info.outputs.DIST_NRO }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug version
        run: |
          export VERSION=`git rev-parse --short HEAD`
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Release version
        if: github.event.inputs.release == 'true' && github.event.inputs.release != 'false' && !cancelled()
        run: |
          export VERSION="${{ github.event.inputs.version }}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Version
        id: info
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "DIST_NRO=wiliwili-NintendoSwitch-${VERSION}" >> $GITHUB_OUTPUT
          echo $VERSION
          echo "${{  github.event.inputs.version }}"


  release:
    needs: [ build-switch, version ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4

      - name: Upload Release
        if: github.event.inputs.release == 'true' && !cancelled()
        uses: ncipollo/release-action@v1
        with:
          name: wiliwili ${{  github.event.inputs.version }}
          tag: ${{  github.event.inputs.version }}
          omitBodyDuringUpdate: true
          body: This release is built by github-action.
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          artifacts: >
            ${{ needs.version.outputs.DIST_NRO }}/${{ needs.version.outputs.DIST_NRO }}.tar.gz

#  build-win-uwp:
#    needs: [ version ]
#    runs-on: windows-2022
#    steps:
#      - name: Install NSIS
#        shell: powershell
#        run: |
#          Invoke-Expression (Invoke-Webrequest 'https://xmake.io/psget.text' -UseBasicParsing).Content
#      - uses: actions/checkout@v4
#        with:
#          submodules: recursive
#          fetch-depth: 0
#      - name: Cache xmake packages
#        uses: actions/cache@v4
#        with:
#          key: ${{ runner.os }}-xmake
#          path: |
#            ${{ runner.temp }}/.xmake/packages
#      - name: build
#        shell: powershell
#        env:
#          VERSION: ${{ needs.version.outputs.VERSION }}
#        run: |
#          $env:path+=";$env:USERPROFILE\xmake"
#          $env:XMAKE_GLOBALDIR="${{ runner.temp }}"
#          xmake f -c -y -v --sw=y --winrt=y --window=sdl --driver=d3d11
#          xmake b -y -v wiliwili
#          cp winrt/key.pfx build/
#          cp winrt/docs/key.pdf build/key.pdf
#      - uses: actions/upload-artifact@v4
#        with:
#          name: ${{ needs.version.outputs.DIST_UWP }}
#          path: |
#            build/wiliwili.msix
#            build/key.pfx
#            build/key.pdf

  build-switch:
    needs: [ version ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { driver: opengl }
        driver: [opengl]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Disable unity build
        if: ${{ github.event.inputs.disable_unity_build == 'true' }}
        run: |
          sed -i 's/BRLS_UNITY_BUILD=ON/BRLS_UNITY_BUILD=OFF/' scripts/build_switch${{ matrix.shuffix }}.sh

      - name: Build Nro
        run: |
          docker run --rm -v $(pwd):/data devkitpro/devkita64:20241022 bash -c "/data/scripts/build_switch${{ matrix.shuffix }}.sh"
          mkdir -p ./switch
          cp ./cmake-build-switch/wiliwili.nro ./switch/wiliwili.nro
          zip -rq wiliwili.zip ./switch

      - name: Release
        uses: softprops/action-gh-release@master
        with:
          draft: false
          tag_name: 'latest'
          files: |
            wiliwili.zip
            
      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.version.outputs.DIST_NRO }}${{ matrix.shuffix }}
          path: "cmake-build-switch/wiliwili.nro"
